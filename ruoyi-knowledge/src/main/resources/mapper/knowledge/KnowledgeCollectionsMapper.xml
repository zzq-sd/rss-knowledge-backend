<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.knowledge.mapper.KnowledgeCollectionsMapper">
    
    <resultMap type="KnowledgeCollections" id="KnowledgeCollectionsResult">
        <result property="collectionId"    column="collection_id"    />
        <result property="userId"    column="user_id"    />
        <result property="articleId"    column="article_id"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectKnowledgeCollectionsVo">
        select collection_id, user_id, article_id, create_by, create_time, update_by, update_time, remark from knowledge_collections
    </sql>

    <select id="selectKnowledgeCollectionsList" parameterType="KnowledgeCollections" resultMap="KnowledgeCollectionsResult">
        <include refid="selectKnowledgeCollectionsVo"/>
        <where>  
            <if test="collectionId != null "> and collection_id = #{collectionId}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="articleId != null "> and article_id = #{articleId}</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''"> and create_time between #{params.beginCreateTime} and #{params.endCreateTime}</if>
        </where>
    </select>
    
    <select id="selectKnowledgeCollectionsByCollectionId" parameterType="Long" resultMap="KnowledgeCollectionsResult">
        <include refid="selectKnowledgeCollectionsVo"/>
        where collection_id = #{collectionId}
    </select>

    <insert id="insertKnowledgeCollections" parameterType="KnowledgeCollections" useGeneratedKeys="true" keyProperty="collectionId">
        insert into knowledge_collections
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="articleId != null">article_id,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="articleId != null">#{articleId},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateKnowledgeCollections" parameterType="KnowledgeCollections">
        update knowledge_collections
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="articleId != null">article_id = #{articleId},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where collection_id = #{collectionId}
    </update>

    <delete id="deleteKnowledgeCollectionsByCollectionId" parameterType="Long">
        delete from knowledge_collections where collection_id = #{collectionId}
    </delete>

    <delete id="deleteKnowledgeCollectionsByCollectionIds" parameterType="String">
        delete from knowledge_collections where collection_id in 
        <foreach item="collectionId" collection="array" open="(" separator="," close=")">
            #{collectionId}
        </foreach>
    </delete>
</mapper>